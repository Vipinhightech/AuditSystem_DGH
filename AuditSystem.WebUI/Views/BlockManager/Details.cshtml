@model AuditSystem.Core.Models.AuditSystem_Blocks

@{
    ViewBag.Title = "Details";
}

<h2>Block Details</h2>

<div>
    @*<h4>AuditSystem_Blocks</h4>*@
    <hr />
    <table class="table">
        <tbody>
            <tr style="border-style:hidden;">
                <td style="width:20%">@Html.DisplayNameFor(model => model.Block_Name) :</td>
                <td style="width:30%"> @Html.DisplayFor(model => model.Block_Name) </td>

                <td style="width:20%"> @Html.DisplayNameFor(model => model.Psc_Start_Date) :</td>
                <td style="width:30%">@Model.Psc_Start_Date.ToString("dd-MM-yyyy") </td>
            </tr>

            <tr style="border-style:hidden;">

                <td>@Html.DisplayNameFor(model => model.Block_Current_Status) :</td>
                <td> @Html.DisplayFor(model => model.Block_Current_Status) </td>

                <td> @Html.DisplayNameFor(model => model.Block_Category) :</td>
                <td> @Html.DisplayFor(model => model.Block_Category) </td>
            </tr>

            <tr style="border-style:hidden;">
                <td>   @Html.DisplayNameFor(model => model.Revenue_Till_Date) :</td>
                <td>
                    <a href="#" data-bs-toggle="modal" data-bs-target="#RevExpModal">
                        @Html.DisplayFor(model => model.Revenue_Till_Date)
                    </a>
                </td>


                <td>  @Html.DisplayNameFor(model => model.Expenditure_Till_Date) :</td>
                <td>   @Html.DisplayFor(model => model.Expenditure_Till_Date) </td>
            </tr>

            <tr style="border-style:hidden;">
                <td>   @Html.DisplayNameFor(model => model.Updated_Status_Year) :</td>
                <td>   @Html.DisplayFor(model => model.Updated_Status_Year) </td>

                @*<td>  @Html.DisplayNameFor(model => model.Expenditure_Till_Date) :</td>
                    <td>   @Html.DisplayFor(model => model.Expenditure_Till_Date) </td>*@
            </tr>

            @*<tr style="border-style:hidden;">
                    <td>   @Html.DisplayNameFor(model => model.UpdatedBy) :</td>
                    <td>   @Html.DisplayFor(model => model.UpdatedBy) </td>


                </tr>*@

        </tbody>
    </table>

</div>
<p>
    @if (User.IsInRole("superuser") || User.IsInRole("admin") || User.IsInRole("management") || User.IsInRole("coord"))
    {
        @Html.ActionLink("Edit Block", "Edit", new { Id = Model.Block_Id })
    }

</p>

<!-- Popup for Yearwise Revenue & Expenditure -->
<div class="modal fade" id="RevExpModal">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Yearwise Revenue and Expenditure</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayName("Year")
                            </th>
                            <th>
                                @Html.DisplayName("Revenue")
                            </th>
                            <th>
                                @Html.DisplayName("Expenditure")
                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Revenue_Expenditures)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Year)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Revenue)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Expenditure)
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>



@{
    var currentYear = DateTime.Now.Year;
    var years = new List<string>();

    for (int i = currentYear; i >= 1995; i--)
    {
        years.Add($"{i}-{i + 1}");
    }
}



<button class="btn btn-primary" id="viewAttachment" style="float:right;">View Attachments</button>

<div id="attachments_table" style="display: none;">
    <br /> <hr />
    @Html.ActionLink("Add New Attachment", "Upload_Attachment", "Attachments", new { Id = Model.Block_Id }, null)

    <table class="table table-striped" id="attachmentsTable">
        <thead>
            <tr>
                <th>
                    @Html.DisplayName("From Year")
                    <select id="attachmentYearFilter">
                        <option value="">All</option>
                        @foreach (var year in years)
                        {
                            <option value="@year">@year</option>
                        }
                    </select>

                </th>
                <th>
                    @Html.DisplayName("To Year")
                </th>
                <th>
                    @Html.DisplayName("Date of Letter")
                </th>
                <th>
                    @Html.DisplayName("Title")
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Attachments)
            {
                <tr>
                    <td style="width:15%">
                        @Html.DisplayFor(modelItem => item.FromYear)
                    </td>
                    <td style="width:15%">
                        @Html.DisplayFor(modelItem => item.ToYear)
                    </td>
                    <td>
                        @item.DateofAttachment.ToString("dd-MM-yyyy")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>

                    <!-- Add more columns as needed -->
                    <td>
                        <a target="_blank" href="~/Attachments/@item.Doc_Address">View Doc</a>
                        @if (User.IsInRole("superuser") || User.IsInRole("admin") || User.IsInRole("management") || User.IsInRole("coord"))
                        {
                            @Html.DisplayName(" | ")
                            @Html.ActionLink("Edit", "Edit", "Attachments", new { id = item.Id }, null)
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>




<br />
<hr />
<h4>Exceptions</h4>

@Html.ActionLink("Add Exception", "Create", "Exception", new { Id = Model.Block_Id }, null) |
@Html.ActionLink("Add Exceptions (Excel)", "AddExceptionExcel", "Exception", new { Id = Model.Block_Id }, null)


<table class="table table-hover" id="exceptionsTable">
    <thead>
        <tr>
            <th>
                @* @Html.DisplayName("Year")*@
                <select id="yearFilter">
                    <option value="">All</option>
                    @foreach (var year in years)
                    {
                        <option value="@year">@year</option>
                    }
                </select>
            </th>
            <th>
                @Html.DisplayName("To Year")
            </th>
            <th>
                @Html.DisplayName("Exception No")
            </th>
            <th style="max-width: 10%;">
                @*@Html.DisplayName("Nature Of Exception")*@
                <select id="natureFilter" style="width: 100%;">
                    <option value="">Nature Of Exception (All)</option>
                    <option value="Short payment of royalty">Short payment of royalty</option>
                    <option value="Short payment of profit petroleum">Short payment of profit petroleum</option>
                    <option value="Short payment of Cess">Short payment of Cess</option>
                    <option value="PEL payment fees">PEL payment fees</option>
                    <option value="ML payment fees">ML payment fees</option>
                    <option value="Inventory Valuation">Inventory Valuation</option>
                    <option value="Forex">Forex</option>
                    <option value="Approval of chart of accounts">Approval of chart of accounts</option>
                    <option value="Insurance- Co-insured/Additionally insured">Insurance- Co-insured/Additionally insured</option>
                    <option value="Insurance- waiver/ subrogation">Insurance- waiver/ subrogation</option>
                    <option value="Management Committee meeting">Management Committee meeting</option>
                    <option value="Approval of Accounts">Approval of Accounts</option>
                    <option value="Site Restoration Fund">Site Restoration Fund</option>
                    <option value="development area wise allocation">development area wise allocation</option>
                    <option value="Exploration in ML area">Exploration in ML area</option>
                    <option value="Delivery point">Delivery point</option>
                    <option value="Periodical statements">Periodical statements</option>
                    <option value="Block bank account">Block bank account</option>
                    <option value="GAS flaring">GAS flaring</option>
                    <option value="Measurement of petroleum">Measurement of petroleum</option>
                    <option value="Short payment of PLP">Short payment of PLP</option>
                    <option value="Physical verification of fixed assets">Physical verification of fixed assets</option>
                    <option value="Physical verification of Inventory">Physical verification of Inventory</option>
                    <option value="Procurement of materials">Procurement of materials</option>
                    <option value="Bank guarantee">Bank guarantee</option>
                    <option value="Block transfer">Block transfer</option>
                    <option value="Essentaility certificates">Essentaility certificates</option>
                    <option value="Budget">Budget</option>
                    <option value="Appendix-H">Appendix-H</option>
                    <option value="CRL limit">CRL limit</option>
                    <option value="Cost Recovery Approval">Cost Recovery Approval</option>
                </select>
            </th>
            <th>
                @*@Html.DisplayName("Exception Type")*@
                <select id="typeFilter">
                    <option value="">Exception Type (All)</option>
                    <option value="Financial">Financial</option>
                    <option value="Non-Financial">Non-Financial</option>

                </select>
            </th>
            <th>
                @Html.DisplayName("Title Of Exception")
            </th>
            <th>
                @Html.DisplayName("Zist Of Exception")
            </th>
            <th>
                @*  @Html.DisplayName("Action Taken")*@
                <select id="actionFilter">
                    <option value="">Action Taken</option>
                    <option value="Settled">Settled</option>
                    <option value="Unsettled">Unsettled</option>
                    @*<option value="Unsettled
                        (Pending Approval)">Unsettled (Pending Approval)</option>*@
                </select>
            </th>
            <!-- Add more columns as needed -->
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Exceptions)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Year)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ToYear)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.ExceptionNo)
                    @Html.DisplayFor(modelItem => item.ExceptionSubNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NatureOfException)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExceptionType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExceptionTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ZistOfException)
                </td>
                <td>
                    @if (item.ActionTaken == "Settled")
                    {
                        <a target="_blank" href="~/Attachments/@item.S_Doc_Address">Settled</a>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.ActionTaken)
                    }

                    @*@if (item.ActionTaken == "Unsettled" && item.S_Status == 1)
                        {
                            @Html.DisplayName("(Pending Approval)")
                        }*@
                </td>
                <!-- Add more columns as needed -->
                <td>
                    @if (User.IsInRole("superuser") || User.IsInRole("admin") || User.IsInRole("management") || User.IsInRole("coord"))
                    {
                        if (item.S_Status == 0)
                        {
                            @Html.ActionLink("Edit", "Edit", "Exception", new { id = item.ExceptionId }, null)
                            @Html.DisplayName(" |")
                        }
                    }

                    @Html.ActionLink("Details", "Details", "Exception", new { id = item.ExceptionId }, null)

                    <br />
                    @if (User.IsInRole("superuser") || User.IsInRole("admin") || User.IsInRole("management"))
                    {
                        @Html.DisplayName(" | ")
                        if (item.ActionTaken == "Unsettled" && item.S_Status == 0)
                        {
                            @Html.ActionLink("Proceed for Settlement", "InitiateSettlement", "Exception", new { id = item.ExceptionId }, null)
                        }
                    }

                    @*@if (item.ActionTaken == "Unsettled" && item.S_Status == 1)
        {
            @Html.DisplayName("Pending For Approval")
        }*@

                    @*@Html.ActionLink("Delete", "Delete", "Exception", new { id = item.ExceptionId }, null)*@
                </td>
            </tr>
        }
    </tbody>
</table>

<p>
    @*@Html.ActionLink("Edit", "Edit", new { Block_Name = Model.Block_Name }) |*@
    @Html.ActionLink("Back to Block List", "Index")

</p>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            // Toggle attachments table
            $("#viewAttachment").click(function () {
                $("#attachments_table").toggle();
            });

            // Function to filter exceptions table rows
            function filterExceptionsTable() {
                var year = $('#yearFilter').val();
                var nature = $('#natureFilter').val();
                var action = $('#actionFilter').val();
                var type = $('#typeFilter').val();

                $('#exceptionsTable tbody tr').filter(function () {
                    $(this).toggle(
                        (year === "" || $(this).find('td:eq(0)').text().trim() === year) &&
                        (nature === "" || $(this).find('td:eq(3)').text().trim() === nature) &&
                        (type === "" || $(this).find('td:eq(4)').text().trim() === type) &&
                        (action === "" || $(this).find('td:eq(7)').text().trim() === action)
                    );
                });
            }

            // Function to filter attachments table rows
            function filterAttachmentsTable() {
                var attachmentYear = $('#attachmentYearFilter').val();

                $('#attachmentsTable tbody tr').filter(function () {
                    $(this).toggle(
                        attachmentYear === "" || $(this).find('td:eq(0)').text().trim() === attachmentYear
                    );
                });
            }

            // Apply filter when any exceptions dropdown value changes
            $('#yearFilter, #natureFilter, #actionFilter, #typeFilter').change(filterExceptionsTable);

            // Apply filter when the attachment year dropdown value changes
            $('#attachmentYearFilter').change(filterAttachmentsTable);
        });
    </script>
}
